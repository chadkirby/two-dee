// Generated by CoffeeScript 1.9.1
var Circle, PI, Point, Rect, abs, atan2, ceil, cos, fuzzyEqual, hypot, isNumber, max, min, round, roundTo, sin, sqrt, square, util;

sin = Math.sin, cos = Math.cos, atan2 = Math.atan2, sqrt = Math.sqrt, abs = Math.abs, max = Math.max, min = Math.min, PI = Math.PI, round = Math.round, ceil = Math.ceil;

Rect = require('./Rect');

util = require('./utilities');

isNumber = util.isNumber, fuzzyEqual = util.fuzzyEqual, hypot = util.hypot, roundTo = util.roundTo, square = util.square;

Point = require('./Point2d');

Circle = (function() {
  var defProp;

  defProp = util.defProp.bind(Circle);

  function Circle(center, radius) {
    this.radius = radius != null ? radius : 1;
    this.center = Point["new"](center);
  }

  Circle.prototype.pointAt = function(angle) {
    return new Point(this.center.x + this.radius * angle.cos, this.center.y + this.radius * angle.sin);
  };

  Circle.prototype.svgString = function() {
    return "M " + this.center + "\nm -" + this.radius + ", 0\na " + this.radius + "," + this.radius + " 0 1,0 " + (this.radius * 2) + ",0\na " + this.radius + "," + this.radius + " 0 1,0 -" + (this.radius * 2) + ",0";
  };

  Circle.prototype.envelope = function(offset) {
    if (offset == null) {
      offset = 0;
    }
    return Rect(this.center.x - this.radius - offset, this.center.y - this.radius - offset, this.center.x + this.radius + offset, this.center.y + this.radius + offset);
  };

  return Circle;

})();

module.exports = Circle;
